"use client"

import { useState } from "react"
import jsPDF from "jspdf"
import autoTable from "jspdf-autotable"
import { Badge } from "../../components/ui/badge"
import { Button } from "../../components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../../components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "../../components/ui/tabs"
import { Filter } from "lucide-react"
import Link from "next/link"

const categories = [
    { id: "all", name: "All", description: "All Categories" },
    { id: "scr", name: "SCR", description: "Security Control Review" },
    { id: "ipt", name: "IPT", description: "Infrastructure Penetration Testing" },
    { id: "ept", name: "EPT", description: "External Penetration Testing" },
    { id: "ha", name: "HA", description: "Host Assessment" },
    { id: "db", name: "DB", description: "Database Assessment" },
    { id: "mpat", name: "MPAT", description: "Mobile Penetration Application Testing" },
    { id: "wapt", name: "WAPT", description: "Web Application Penetration Testing" },
    { id: "api", name: "API", description: "API Testing" },
]

const noteTypes = [
    { id: "all", name: "All" },
    { id: "cheatsheet", name: "Cheatsheet" },
    { id: "configuration", name: "Configuration" },
    { id: "walkthrough", name: "Walkthrough" },
]

export default function PentestNotesPage() {
    const [selectedType, setSelectedType] = useState("all")

    const generatePDF = (category, type) => {
        const doc = new jsPDF()

        doc.setFontSize(16)
        doc.text(`${category.name} - ${type}`, 15, 20)

        autoTable(doc, {
            startY: 30,
            head: [["Category", "Type", "Description"]],
            body: [[category.name, type, category.description]],
        })

        doc.save(`${category.id}_${type}.pdf`)
    }

    return (
        <div className="container mx-auto px-4 py-8">
            <div className="flex items-center justify-between mb-6">
                <h1 className="text-3xl font-bold">Pentest Notes / Walkthrough</h1>
                <div className="flex items-center gap-2">
                    <Filter className="h-4 w-4" />
                    <span className="text-sm font-medium">Filter by:</span>
                    <div className="flex gap-2">
                        {noteTypes.map((type) => (
                            <Button
                                key={type.id}
                                variant={selectedType === type.id ? "default" : "outline"}
                                size="sm"
                                onClick={() => setSelectedType(type.id)}
                            >
                                {type.name}
                            </Button>
                        ))}
                    </div>
                </div>
            </div>

            <Tabs defaultValue="all">
                <TabsList className="mb-4 flex flex-wrap h-auto">
                    {categories.map((category) => (
                        <TabsTrigger key={category.id} value={category.id}>
                            {category.name}
                        </TabsTrigger>
                    ))}
                </TabsList>

                {categories.map((category) => (
                    <TabsContent key={category.id} value={category.id}>
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {categories
                                .filter((cat) => category.id === "all" || cat.id === category.id)
                                .map((filteredCategory) => (
                                    <>
                                        {(selectedType === "all" || selectedType === "cheatsheet") && (
                                            <Card key={`${filteredCategory.id}-cheatsheet`}>
                                                <CardHeader>
                                                    <div className="flex items-center justify-between">
                                                        <CardTitle>{filteredCategory.name} Cheatsheet</CardTitle>
                                                        <Badge variant="outline" className="bg-blue-500/10 text-blue-500 border-blue-500/20">
                                                            Cheatsheet
                                                        </Badge>
                                                    </div>
                                                    <CardDescription>Quick reference guide for {filteredCategory.description}</CardDescription>
                                                </CardHeader>
                                                <CardContent>
                                                    <div className="flex justify-between">
                                                        <Button asChild variant="outline">
                                                            <Link href={`/pentest-notes/${filteredCategory.id}/cheatsheet`}>View</Link>
                                                        </Button>
                                                        <Button variant="outline" onClick={() => generatePDF(filteredCategory, "Cheatsheet")}>
                                                            Download PDF
                                                        </Button>
                                                    </div>
                                                </CardContent>
                                            </Card>
                                        )}

                                        {(selectedType === "all" || selectedType === "configuration") && (
                                            <Card key={`${filteredCategory.id}-configuration`}>
                                                <CardHeader>
                                                    <div className="flex items-center justify-between">
                                                        <CardTitle>Nessus Configuration Guide</CardTitle>
                                                        <Badge variant="outline" className="bg-green-500/10 text-green-500 border-green-500/20">
                                                            Configuration
                                                        </Badge>
                                                    </div>
                                                    <CardDescription>Setup guide for Nessus scanning</CardDescription>
                                                </CardHeader>
                                                <CardContent>
                                                    <div className="flex justify-between">
                                                        <Button asChild variant="outline">
                                                            <Link href={`/pentest-notes/${filteredCategory.id}/nessus-config`}>View</Link>
                                                        </Button>
                                                        <Button variant="outline" onClick={() => generatePDF(filteredCategory, "Configuration")}>
                                                            Download PDF
                                                        </Button>
                                                    </div>
                                                </CardContent>
                                            </Card>
                                        )}

                                        {(selectedType === "all" || selectedType === "walkthrough") && (
                                            <Card key={`${filteredCategory.id}-walkthrough`}>
                                                <CardHeader>
                                                    <div className="flex items-center justify-between">
                                                        <CardTitle>{filteredCategory.name} Methodology</CardTitle>
                                                        <Badge variant="outline" className="bg-green-500/10 text-green-500 border-green-500/20">
                                                            Walkthrough
                                                        </Badge>
                                                    </div>
                                                    <CardDescription>Step-by-step methodology for {filteredCategory.description}</CardDescription>
                                                </CardHeader>
                                                <CardContent>
                                                    <div className="flex justify-between">
                                                        <Button asChild variant="outline">
                                                            <Link href={`/pentest-notes/${filteredCategory.id}/methodology`}>View</Link>
                                                        </Button>
                                                        <Button variant="outline" onClick={() => generatePDF(filteredCategory, "Walkthrough")}>
                                                            Download PDF
                                                        </Button>
                                                    </div>
                                                </CardContent>
                                            </Card>
                                        )}
                                    </>
                                ))}
                        </div>
                    </TabsContent>
                ))}
            </Tabs>
        </div>
    )
}
