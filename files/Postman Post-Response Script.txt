// HEADERS

  pm.test("HEADER: Content-Security-Policy (CSP) present", function () {
    pm.response.to.have.header("Content-Security-Policy");
    pm.expect(pm.response.headers.get("Content-Security-Policy")).to.include("default-src 'self'");
  });

  pm.test("HEADER: X-Content-Type-Options present", function () {
    pm.response.to.have.header("X-Content-Type-Options");
    pm.expect(pm.response.headers.get("X-Content-Type-Options")).to.equal("nosniff");
  });

  pm.test("HEADER: X-Frame-Options header present", function () {
    pm.response.to.have.header("X-Frame-Options");
    pm.expect(pm.response.headers.get("X-Frame-Options")).to.equal("DENY");
  });

  pm.test("HEADER: X-XSS-Protection header present", function () {
    pm.response.to.have.header("X-XSS-Protection");
    pm.expect(pm.response.headers.get("X-XSS-Protection")).to.equal("1; mode=block");
  });

  pm.test("HEADER: Strict-Transport-Security (HSTS) present", function() {
    const header = pm.response.headers.get("Strict-Transport-Security");
    pm.expect(header).to.not.be.undefined;
  });

  pm.test("HEADER: Strict-Transport-Security (HSTS) is configured properly", function() {
    const header = pm.response.headers.get("Strict-Transport-Security") || "";
    pm.expect(header.toLowerCase()).contains("preload");
  });

  pm.test("HEADER: CSRF Token present", function () {
    pm.response.to.have.header("CSRF");
  });  
 